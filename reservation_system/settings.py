"""
Django settings for reservation_system project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

################## This One ##################

import ldap
from django_auth_ldap.config import LDAPSearch


AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# AUTH_LDAP_SERVER_URI = "ldap://10.1.72.10"
AUTH_LDAP_SERVER_URI = "ldap://10.1.72.10:389"
AUTH_LDAP_BIND_DN = "CN=adtest,OU=Coopbank Application Users,DC=coopbank,DC=local"  # <- Confirmed from IT
AUTH_LDAP_BIND_PASSWORD = "Coop$1234"

AUTH_LDAP_USER_SEARCH = LDAPSearch(
    "DC=coopbank,DC=local",  # Base DN
    ldap.SCOPE_SUBTREE,
    "(sAMAccountName=%(user)s)",  # This is typical for AD logins
)

AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail",
}

AUTH_LDAP_ALWAYS_UPDATE_USER = True
AUTH_LDAP_CREATE_USERS = True



import logging

logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)




################ End Here####################








# import ldap
# from django_auth_ldap.config import LDAPSearch

# AUTHENTICATION_BACKENDS = [
#     'django_auth_ldap.backend.LDAPBackend',
#     'django.contrib.auth.backends.ModelBackend',
# ]

# AUTH_LDAP_SERVER_URI = "ldap://10.1.72.10:389"
# AUTH_LDAP_BIND_DN = ""
# AUTH_LDAP_BIND_PASSWORD = ""

# AUTH_LDAP_USER_SEARCH = LDAPSearch(
#     "dc=yourcompany,dc=local",  # Replace this with actual AD base DN
#     ldap.SCOPE_SUBTREE,
#     "(sAMAccountName=%(user)s)",
# )

# AUTH_LDAP_USER_ATTR_MAP = {
#     "first_name": "givenName",
#     "last_name": "sn",
#     "email": "mail",
# }

# AUTH_LDAP_ALWAYS_UPDATE_USER = True
# AUTH_LDAP_CREATE_USERS = True



# # Add LDAP config
# AUTH_LDAP_SERVER_URI = "ldap://your.ldap.server"
# AUTH_LDAP_BIND_DN = "cn=admin,dc=example,dc=com"
# AUTH_LDAP_BIND_PASSWORD = "admin_password"
# AUTH_LDAP_USER_SEARCH = LDAPSearch(
#     "ou=users,dc=example,dc=com",
#     ldap.SCOPE_SUBTREE,
#     "(uid=%(user)s)",
# )
# AUTH_LDAP_USER_ATTR_MAP = {
#     "first_name": "givenName",
#     "last_name": "sn",
#     "email": "mail",
# }
# AUTH_LDAP_ALWAYS_UPDATE_USER = True
# AUTH_LDAP_CREATE_USERS = True




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b*m4n(e+ld$&vg2c+&%en9#eigs+0*@clz7d!&iyjut96gu7j_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
SECURE_SSL_REDIRECT = False

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['localhost', '127.0.0.1']

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]


# Application definition

INSTALLED_APPS = [
    'rest_framework_simplejwt.token_blacklist',
    'rest_framework',
    'corsheaders',

    'reservations',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'reservation_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reservation_system.wsgi.application'


from decouple import config
import os

DEBUG = config('DEBUG', default=False, cast=bool)
SECRET_KEY = config('SECRET_KEY')



# DEBUG=True
# SECRET_KEY=*ltxny%lq*ss__0dmr1&(8wa649wr*-1(we8&49n#m9gz9^6)%
# DB_NAME=Reservation
# DB_USER=postgres
# DB_PASSWORD=ofge
# DB_HOST=localhost
# DB_PORT=5432

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME":config("DB_NAME"),
        "USER": config("DB_USER"),
        "PASSWORD": config("DB_PASSWORD"),
        "HOST": config("DB_HOST"),
        "PORT": config("DB_PORT"),
        "CONN_MAX_AGE": 0,
        "OPTIONS": {"sslmode": "prefer"},
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Addis_Ababa'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# JWT Authentication Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}



from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'



EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
